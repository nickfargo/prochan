// Generated by CoffeeScript 1.10.0
(function() {
  var Awaiter, Callback, pooled,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  pooled = require('./helpers').pooled;

  Awaiter = require('./awaiter');

  module.exports = pooled(Callback = (function(superClass) {
    extend(Callback, superClass);

    function Callback(fn) {
      Callback.__super__.constructor.apply(this, arguments);
      this.fn = fn;
    }

    Callback.prototype.proceed = function(value, isFinal) {
      var prior, ref;
      prior = this.value;
      if ((ref = this.fn) != null) {
        ref.call(null, value, this.awaitee, isFinal);
      }
      this.free();
      return prior;
    };

    return Callback;

  })(Awaiter));

}).call(this);
