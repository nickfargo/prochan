// Generated by CoffeeScript 1.10.0
(function() {
  var Queue, pooled;

  pooled = require('./helpers').pooled;

  module.exports = Queue = (function() {
    var Cell;

    pooled(Cell = (function() {
      Cell.SIZE = 32;

      function Cell(prev, array) {
        this._prev = prev || null;
        this._next = null;
        if (array != null) {
          this.array = array;
        } else {
          if (this.array == null) {
            this.array = new Array(Cell.SIZE);
          }
        }
        if (prev != null) {
          prev._next = this;
        }
      }

      return Cell;

    })());

    Queue.from = function(array) {
      var i, j, q, ref;
      q = new Queue;
      q.length = array.length;
      for (i = j = 0, ref = q.length; j <= ref; i = j += 32) {
        q.tail = Cell.alloc(q.tail, array.slice(i, i + 32));
        if (q.head == null) {
          q.head = q.tail;
        }
      }
      return q;
    };

    function Queue() {
      this.head = null;
      this.tail = null;
      this.length = 0;
      this.offset = 0;
    }

    Queue.prototype.enqueue = function(value) {
      var index;
      index = (this.offset + this.length) % Cell.SIZE;
      if (index === 0) {
        this.tail = Cell.alloc(this.tail);
      }
      if (this.length === 0) {
        this.head = this.tail;
      }
      this.tail.array[index] = value;
      return ++this.length;
    };

    Queue.prototype.dequeue = function() {
      var array, head, next, offset, value;
      if (this.length === 0) {
        return;
      }
      offset = this.offset, head = this.head;
      array = head.array;
      value = array[offset];
      array[offset] = void 0;
      if ((this.offset = (offset + 1) % Cell.SIZE) === 0) {
        if (next = head._next) {
          head.free();
          next._prev = null;
          this.head = next;
        }
      }
      if (--this.length === 0) {
        this.offset = 0;
        this.head.free();
        this.head = this.tail = null;
      }
      return value;
    };

    return Queue;

  })();

}).call(this);
