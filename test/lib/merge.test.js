// Generated by CoffeeScript 1.10.0
(function() {
  var assert, async, chan, final, merge, proc, receive, ref, send;

  assert = require('chai').assert;

  ref = require('prochan'), proc = ref.proc, chan = ref.chan, send = ref.send, receive = ref.receive, final = ref.final, merge = ref.merge;

  async = proc.async;

  describe("Merge:", function() {
    return it("merges", async(function*() {
      var ch, merged, p1, p2, p3, results, values;
      p1 = proc(function*() {
        (yield send(1));
        (yield send(2));
        (yield send(3));
        (yield send(4));
        return 'foo';
      });
      p2 = proc(function*() {
        (yield send(5));
        (yield send(6));
        (yield send(7));
        return 'bar';
      });
      p3 = proc(function*() {
        (yield send(8));
        (yield send(9));
        return 'baz';
      });
      merged = merge([p1, p2, p3]);
      values = (yield receive(proc(function*() {
        var results1, value;
        results1 = [];
        while (!final(value = (yield receive(merged)))) {
          results1.push(value);
        }
        return results1;
      })));
      results = (yield* (function*() {
        var i, len, ref1, results1;
        ref1 = (yield receive(merged));
        results1 = [];
        for (i = 0, len = ref1.length; i < len; i++) {
          ch = ref1[i];
          results1.push((yield receive(ch)));
        }
        return results1;
      })());
      assert.equal(values.length, 9);
      return assert.equal(results.length, 3);
    }));
  });

}).call(this);
